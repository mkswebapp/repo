<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="C:\Users\administrator.SPD\Documents\visual studio 2013\Projects\DemoWebAPI\DemoWebAPI.Repository\bin\Debug\DemoWebAPI.DB.Dll" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#         
    if(Errors.HasErrors)
    {
        return String.Empty;
    }
    CodeGenerationTools code = new CodeGenerationTools(this)
        {FullyQualifySystemTypes = true, CamelCaseFields = false};
    MetadataLoader loader = new MetadataLoader(this);
    string open = "<";
    string close = ">";
    string SourceCsdlPath = FindEDMXFileName();
    ReferenceCsdlPaths = new string[] {};
    string namespaceName = code.VsNamespaceSuggestion();
ItemCollection = loader.CreateEdmItemCollection
        (SourceCsdlPath, ReferenceCsdlPaths.ToArray());
    EntityContainer container = ItemCollection.GetItems<EntityContainer>().FirstOrDefault();
#>
//------------------------------------------------------------------------------
// <auto-generated>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine1")#>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine2")#>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine3")#>
// </auto-generated>
//------------------------------------------------------------------------------
// <#=Host.ResolvePath(".\\.\\")#>
using DemoWebAPI.DB;
using DemoWebAPI.Repository;

namespace <#=namespaceName#>
{
    
<#
    foreach (EntityType entity in 
        ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
    {        
#>
     /// <auto-generated>
     /// Autogenerated service class <#=entity.Name #>
     /// To extend the functioanality create another partial service class
     /// </auto-generated>
     public partial class <#=entity.Name #>Service : BaseEntityService<<#=entity.Name #>>
     {
        public <#=entity.Name #>Service(IUnitOfWork unitOfWork, IRepository<<#=entity.Name #>> <#=entity.Name #>Repository) : base(unitOfWork, <#=entity.Name #>Repository)
        {
        }
     }


<# 
    }        
#>
    
  
}
<#+
public string SourceCsdlPath{ get; set; }
public EdmItemCollection ItemCollection{ get; set; }
public IEnumerable<string> ReferenceCsdlPaths{ get; set; }
 //const string inputFile = @"C:\WorkArea\Projects\PocWebAPI_2012\Application\Application.DB\AdventureWorks.edmx";
   const string inputFile = @"c:\users\administrator.spd\documents\visual studio 2013\Projects\DemoWebAPI\DemoWebAPI.DB\AdventureWorksModel.edmx";

string FindEDMXFileName()
{            
    string[] entityFrameworkFiles = Directory.GetFiles(Host.ResolvePath("."), "*.edmx");
    if(entityFrameworkFiles.Length > 0)
    {
        return entityFrameworkFiles[0];
    }
           return inputFile;
    return  string.Empty;
}
#>